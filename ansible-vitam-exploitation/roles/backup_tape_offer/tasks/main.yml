---

- name: Check if offer has a backup drive
  set_fact:
    offer_has_backup_drive: true
  when:
    - item.readWritePriority is defined
    - item.readWritePriority == "BACKUP"
  loop: "{{ vitam_offers[mongo_cluster_name].tapeLibraries | map(attribute='drives') | list | flatten(levels=1) }}"

- block:

    - name: "Create information file {{ hostvars[groups['hosts_mongod_offer']|first]['tape_offer_backup_time'] }}-{{ mongo_type }}-disk-shard{{ mongo_shard_id }}"
      file:
        path: "{{ vitam_defaults.folder.root_path }}/data/{{ mongo_type }}/{{ hostvars[groups['hosts_mongod_offer']|first]['tape_offer_backup_time'] }}-disk-{{ mongo_type }}-shard{{ mongo_shard_id }}"
        state: "touch"
        owner: "{{ vitam_defaults.users.vitam }}"
        group: "{{ vitam_defaults.users.group }}"
        mode: "{{ vitam_defaults.folder.folder_permission }}"
      when: mongo_type == 'mongod'

    - name: "Create information file {{ hostvars[groups['hosts_mongod_offer']|first]['tape_offer_backup_time'] }}-disk-{{ mongo_type }}-shard0"
      file:
        dest: "{{ vitam_defaults.folder.root_path }}/data/{{ mongo_type }}/{{ hostvars[groups['hosts_mongod_offer']|first]['tape_offer_backup_time'] }}-disk-{{ mongo_type }}-shard0"
        state: "touch"
        owner: "{{ vitam_defaults.users.vitam }}"
        group: "{{ vitam_defaults.users.group }}"
        mode: "{{ vitam_defaults.folder.folder_permission }}"
      when: mongo_type == 'mongoc'

    - name: "Create a zip archive of {{ backup_dest }}"
      archive:
        path: "{{ vitam_defaults.folder.root_path }}/data/{{ mongo_type }}"
        dest: "{{ backup_dest }}"
        format: zip

    - name: "Delete information file {{ hostvars[groups['hosts_mongod_offer']|first]['tape_offer_backup_time'] }}-disk-{{ mongo_type }}-shard0"
      file:
        path: "{{ vitam_defaults.folder.root_path }}/data/{{ mongo_type }}/{{ hostvars[groups['hosts_mongod_offer']|first]['tape_offer_backup_time'] }}-disk-{{ mongo_type }}-shard0"
        state: absent

  when:
    - offer_has_backup_drive is defined
    - offer_has_backup_drive == true