---

- block:
  - name: update_cache
    shell: "yum clean all && yum makecache"

  - name: Install openstack repository package
    yum:
      name: centos-release-openstack-rocky
      state: present
    register: result
    retries: "{{ packages_install_retries_number }}"
    until: result is succeeded
    delay: "{{ packages_install_retries_delay }}"

  # Les différentes manières d'installer les clients openstack sont décrites ici : https://docs.openstack.org/user-guide/common/cli-install-openstack-command-line-clients.html
  # KWA Note : le client designate n'est pas inclus dans les dépendances par défaut du client openstack
  - name: Install openstack clients with proxy defined
    yum:
      name:
        - python-openstackclient
        - python-designateclient
        - python2-swiftclient
      state: present
    register: result
    retries: "{{ packages_install_retries_number }}"
    until: result is succeeded
    delay: "{{ packages_install_retries_delay }}"
    environment:
        http_proxy: "{{ http_proxy_environnement }}"
        https_proxy: "{{ http_proxy_environnement }}"
    when: http_proxy_environnement is defined and http_proxy_environnement != ""

  - name: Install openstack clients without proxy defined
    yum:
      name:
        - python-openstackclient
        - python-designateclient
        - python2-swiftclient
      state: present
    register: result
    retries: "{{ packages_install_retries_number }}"
    until: result is succeeded
    delay: "{{ packages_install_retries_delay }}"
    when: http_proxy_environnement is not defined or http_proxy_environnement == ""

  - block:

    - name: ensure  pip package is up to date with proxy
      pip:
        name: pip
        state: latest
      environment:
        http_proxy: "{{ http_proxy_environnement }}"
        https_proxy: "{{ http_proxy_environnement }}"
    
    - name: ensure  chardet pip package is up to date with proxy
      pip:
        name: chardet
        state: latest
      environment:
        http_proxy: "{{ http_proxy_environnement }}"
        https_proxy: "{{ http_proxy_environnement }}"

    - name: ensure  urllib3 pip package is up to date with proxy
      pip:
        name: urllib3
        state: latest
      environment:
        http_proxy: "{{ http_proxy_environnement }}"
        https_proxy: "{{ http_proxy_environnement }}"

    when: http_proxy_environnement is defined and http_proxy_environnement != ""

  - block:

    - name: ensure  pip package is up to date without proxy
      pip:
        name: pip
        state: latest
    
    - name: ensure  chardet pip package is up to date without proxy
      pip:
        name: chardet
        state: latest

    - name: ensure  urllib3 pip package is up to date without proxy
      pip:
        name: urllib3
        state: latest
  
    when: http_proxy_environnement is not defined or http_proxy_environnement == ""

  - name: copy CA certificates for keystone
    copy:
      src: "{{ item }}"
      dest: "/etc/pki/ca-trust/source/anchors/"
      owner: root
      group: root
      mode: 444
    with_fileglob:
      - "{{ inventory_dir }}/certs/server/ca/*.crt"

  - name: Update CA truststore
    command: update-ca-trust
  
  when: ansible_os_family == "RedHat"

- name: List swift buckets for {{ vitam_prefix_offer|default(vitam_site_name) }}
  shell: swift --insecure list --prefix {{ vitam_prefix_offer|default(vitam_site_name) }};
  environment:
    OS_AUTH_URL: "{{ vitam_offers[offer_conf]['swiftKeystoneAuthUrl'] }}"
    OS_USER_DOMAIN_NAME: "{{ vitam_offers[offer_conf]['swiftDomain'] }}"
    OS_USERNAME: "{{ vitam_offers[offer_conf]['swiftUser'] }}"
    OS_PASSWORD: "{{ vitam_offers[offer_conf]['swiftPassword'] }}"
    OS_PROJECT_NAME: "{{ vitam_offers[offer_conf]['swiftProjectName'] }}"
    OS_INTERFACE: "{{ vitam_offers[offer_conf]['swiftInterface'] }}"
    OS_PROJECT_ID: "{{ vitam_offers[offer_conf]['swiftProjectId'] }}"
    OS_REGION_NAME: "{{ vitam_offers[offer_conf]['swiftRegionName'] }}"
  register: swift_buckets

# OMA: to be removed before MR
- name: test
  debug:
    msg: "{{ swift_buckets }}"

- name: Remove data in offer for swift with swift command
  shell: swift --insecure delete {{ item }};
  register: task_result
  until: task_result.rc == 0
  retries: "{{ nb_retries|int }}"
  delay: "{{ interval_delay|int }}"
  environment:
    OS_AUTH_URL: "{{ vitam_offers[offer_conf]['swiftKeystoneAuthUrl'] }}"
    OS_USER_DOMAIN_NAME: "{{ vitam_offers[offer_conf]['swiftDomain'] }}"
    OS_USERNAME: "{{ vitam_offers[offer_conf]['swiftUser'] }}"
    OS_PASSWORD: "{{ vitam_offers[offer_conf]['swiftPassword'] }}"
    OS_PROJECT_NAME: "{{ vitam_offers[offer_conf]['swiftProjectName'] }}"
    OS_INTERFACE: "{{ vitam_offers[offer_conf]['swiftInterface'] }}"
    OS_PROJECT_ID: "{{ vitam_offers[offer_conf]['swiftProjectId'] }}"
    OS_REGION_NAME: "{{ vitam_offers[offer_conf]['swiftRegionName'] }}"
  with_items:
    - "{{ swift_buckets.stdout_lines }}"
  when: item | regex_search("{{ vitam_prefix_offer|default(vitam_site_name) }}_{{ vitam_tenant_ids }}_{{ containerRegExp }}", multiline=True, ignorecase=True)
