---

- name: Check if offer has a backup drive
  set_fact:
    offer_has_backup_drive: true
  when:
    - item.readWritePriority is defined
    - item.readWritePriority == "BACKUP"
  loop: "{{ vitam_offers[mongo_cluster_name].tapeLibraries | map(attribute='drives') | list | flatten(levels=1) }}"

- block:

    - name: Detect ip_admin of tape offer
      set_fact:
        tape_offer_admin_ip: "{{ hostvars[item]['ip_admin'] }}"
      when:
        - vitam_offers[hostvars[item]['offer_conf']]['provider'] == 'tape-library'
        - hostvars[item]['offer_conf'] == mongo_cluster_name
      with_inventory_hostnames:
        - hosts_storage_offer_default

    - name: Post backup to tape offer
      uri:
        url: "http://{{ tape_offer_admin_ip }}:{{ vitam.storageofferdefault.port_admin }}/offer/v1/backup/{{ backup_dest | basename }}"
        method: PUT
        headers:
          Connection: "keep-alive"
          X-Tenant-Id: "{{ vitam_tenant_admin }}"
          Content-Type: "application/octet-stream"
        src: "{{ backup_dest }}"
        remote_src: yes
        body_format: "raw"
        # TODO: define correct timeout value
        timeout: "{{ vitam_defaults.services.api_call_timeout }}"
        status_code: 201
      register: upload_result
      until: upload_result.status != -1
      retries: 1
      delay: 10

    - name: Delete backup
      file:
        path: "{{ backup_dest }}"
        state: absent

  when:
    - offer_has_backup_drive is defined
    - offer_has_backup_drive == true