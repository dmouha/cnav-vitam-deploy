---

- name: ensure no old result is present
  file:
    path: "{{ inventory_dir }}/report.csv"
    state: absent

- name: copy "jeux de donn√©es" for performance tests
  copy:
    src: "{{ item }}"
    dest: "{{ vitam_defaults.folder.root_path }}/data/ihm-recette/test-data/{{ item | basename }}"
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ vitam_defaults.folder.conf_permission }}"
  with_fileglob:
    - "{{ role_path }}/files/*"

- name: Connection to ihm-recette before uploading
  uri:
    url: "https://{{ ip_service }}:{{ vitam.ihm_recette.port_service }}/{{ vitam.ihm_recette.baseuri }}/v1/api/login"
    validate_certs: no
    method: POST
    body: '{"token":{"principal":"{{ vitam_users[0].login }}","credentials": "{{ vitam_users[0].password }}" }}' # First account is used
    body_format: json
    status_code: 200
    headers:
      Content-Type: "application/json;charset=utf-8"
      Accept: "application/json, text/plain, */*"
      Connection: "keep-alive"
      Host: "{{ ip_service }}"
  run_once: true
  no_log: "{{ hide_passwords_during_deploy }}"
  register: connected

- name: launch perf test
  uri:
    url: "https://{{ ip_service }}:{{ vitam.ihm_recette.port_service }}/{{ vitam.ihm_recette.baseuri }}/v1/api/performances"
    validate_certs: no
    return_content: yes
    method: POST
    headers:
      Connection: "keep-alive"
      X-Tenant-Id: "{{ item }}"
      X-CSRF-Token: "{{ connected.json.tokenCSRF }}"
#      Content-Type: "application/octet-stream"
      Cookie: "{{ connected.set_cookie }}"
      Host: "{{ ip_service }}"
      body_format: json
    body: "{{ lookup('template','perf.json.j2') }}"
    body_format: json
    status_code: 202
  run_once: true # Limit as this upload is not related to tenants
  when: connected.set_cookie != ''
  with_items:
    - "{{ vitam_tenant_ids|first }}"
  register: launched

- name: Wait until ingest is finished
  command: "curl -I --silent -k -H \"Cookie: {{ connected.set_cookie }}\" -H \"Host: {{ ip_service }}\" -H \"X-CSRF-Token: {{ connected.json.tokenCSRF }}\" https://{{ ip_service }}:{{ vitam.ihm_recette.port_service }}/{{ vitam.ihm_recette.baseuri }}/v1/api/performances"
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: "{{ nb_retries }}"
  delay: 10

- name: download output file
  fetch:
    src: "{{ vitam_defaults.folder.root_path }}/data/ihm-recette/report/performance/{{ launched.results[0].content }}"
    dest: "{{ inventory_dir }}/report.csv"
    flat: yes
  ignore_errors: true
